# VTinney 2019-2-19
# Step 1 - import rasters
# Step 2 - stack rasters and divide by populatio total
# Step 3 - multiply population fraction from above to LandScan for LS resolution age group population counts
# write all rasters

# Race rasters were created using the rasterize polygon command in ArcMap, clipping to bay area extent
# value for the raster file indicates the CBP number for total count race in 546 CBG in the bay area
# Race data counts from the ACS, 2016

sp_df <- readOGR(dsn=getwd(), layer = 'Bay_area_full')

setwd("C:/Users/vtinney/GoogleDrive/EDF_shared/Population/Race/Rasters_Bayarea_all/")


library(raster)
library(rgdal)
library(maptools)
library(rgeos)
library(foreign)



# Read in race/ethnicity rasters

totalrace <- raster('total.tif')
white <- raster('white_ba.tif')
black <- raster('black_ba.tif')
ai <- raster('ai_ba.tif')
nativehaw <- raster('native_hawaii_ba.tif')
asian <- raster('asian_ba.tif')
other <- raster('other_ba.tif')
hispanic <- raster('hispanic_ba.tif')

#change projection
crs(totalrace) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
crs(white) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
crs(black) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
crs(ai) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
crs(nativehaw) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
crs(asian) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
crs(other) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
crs(hispanic) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"

#Write raster with new projection
writeRaster(totalrace, filename="total2.tif", format="GTiff", overwrite=TRUE)
writeRaster(ai, filename="american_indian2.tif", format="GTiff", overwrite=TRUE)
writeRaster(white, filename="white2.tif", format="GTiff", overwrite=TRUE)
writeRaster(black, filename="black2.tif", format="GTiff", overwrite=TRUE)
writeRaster(other, filename="other2.tif", format="GTiff", overwrite=TRUE)
writeRaster(asian, filename="asian2.tif", format="GTiff", overwrite=TRUE)
writeRaster(nativehaw, filename="nativehawaii2.tif", format="GTiff", overwrite=TRUE)
writeRaster(hispanic, filename="hispanic2.tif", format="GTiff", overwrite=TRUE)

#Stack all race rasters
race_stack <- stack('white2.tif', 'black2.tif', 'american_indian2.tif', 'nativehawaii2.tif', 'asian2.tif','hispanic2.tif', 'other2.tif')
names(race_stack) <- c('white', 'black', 'american_indian', 'native_hawaii', 'asian', 'hispanic', 'other')
race_frac <- race_stack / totalrace
names(race_frac) <- c('white', 'black', 'american_indian', 'native_hawaii', 'asian', 'hispanic', 'other')

#import LandScan Data
setwd("C:/Users/vtinney/Dropbox/EDF_2019/Population/LandScan")
conus <- raster('CONUS2017.tif')

#Resample such that LandScan and Population fraction are on the same resolution
resample_race_frac <- resample(race_frac, conus, method='bilinear')

#Multiple population fraction by the original population counts in LandScan
conus_race_frac <- resample_race_frac * conus

#Rename layers
conus_race_frac
names(conus_race_frac) <- c('white', 'black', 'american_indian', 'native_hawaii', 'asian', 'hispanic', 'other')

setwd("C:/Users/vtinney/GoogleDrive/EDF_shared/Population/Race")

#write all tifs
writeRaster(race_stack, filename="all_race_count3.tif", bylayer=TRUE, format="GTiff", overwrite=TRUE)
writeRaster(race_frac, filename="race_frac3.tif", bylayer=TRUE, format="GTiff", overwrite=TRUE)
writeRaster(conus_race_frac, filename="conus_race3.tif", bylayer=TRUE, format="GTiff", overwrite=TRUE)
